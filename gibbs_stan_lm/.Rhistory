source('~/code/PE/2.R', echo=TRUE)
source('~/code/PE/2.R', echo=TRUE)
fibonacci(1:10)
source('~/code/PE/2.R', echo=TRUE)
fib.seq(3)
fibonacci.true(3)
fibonacci.true(5)
fibonacci.true(10)
source('~/code/PE/2.R', echo=TRUE)
fibonacci(1:10)
source('~/code/PE/2.R', echo=TRUE)
source('~/code/PE/2.R', echo=TRUE)
source('~/code/PE/2.R', echo=TRUE)
fibonacci(10)
fibonacci.true(10)
current.num = fibonacci(i)
i = 3
current.num = fibonacci(i)
source('~/code/PE/2.R', echo=TRUE)
current.sum
fibonacci(6)
fibonacci(7)
fibonacci(8)
fibonacci(9)
fibonacci(1:10)
source('~/code/PE/2.R', echo=TRUE)
fibonacci(40)
fibonacci(41)
fibonacci(42)
source('~/code/PE/2.R', echo=TRUE)
source('~/code/PE/2.R', echo=TRUE)
source('~/code/PE/2.R', echo=TRUE)
source('~/code/PE/2.R', echo=TRUE)
sqrt(600851475143)
source('~/code/PE/3.R', echo=TRUE)
n = 600851475143
upper.limit = floor(sqrt(n))
factors = c()
for (i in 2:upper.limit){
if (n %% i == 0){
factors = c(factors, i)
}
}
n = 100
upper.limit = floor(sqrt(n))
factors = c()
for (i in 2:upper.limit){
if (n %% i == 0){
factors = c(factors, i)
}
}
install.packages("rstan")
system("g++ -v")
system("gvv -v")
system("gcc -v")
library(ggplot2)
library(rstan)
library(dplyr)
install.packages("dplyr")
install.packages("data.table")
R.version
N = 100
x = runif(N, 0, 10)
y = 2 * x - 3 + rnorm(N, sd = 1)
plot(y ~ x)
m = lm(y ~ x)
summary(m)
t(x) %*% x
solve(t(x) %*% x)
solve(t(x) %*% x) %*% t(x) %*% y
X = cbind(1, x)
X
solve(t(X) %*% X) %*% (t(X) %*% y)
summary(m)
t(X)
t(X) %*% X
N
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
x = rnorm(N)
y = cumsum(x)
plot(y)
x = rnorm(N)
y = cumsum(x)
plot(y)
source('~/diffndiff/diff.R', echo=TRUE)
1e3 / 60
1e4 / 60
1e4 / (60^2)
1e5 / (60^2)
source('~/docs/Iterative_ML_paper/R/gibbs_stan_lm/gibbs_stan_lm_test.R', echo=TRUE)
source('~/docs/Iterative_ML_paper/R/gibbs_stan_lm/gibbs_stan_lm_test.R', echo=TRUE)
load("gibbs_mc_results.RData")
source('~/docs/Iterative_ML_paper/R/gibbs_stan_lm/gibbs_stan_lm_test.R', echo=TRUE)
source('~/docs/Iterative_ML_paper/R/gibbs_stan_lm/gibbs_stan_lm_test.R', echo=TRUE)
source('~/docs/Iterative_ML_paper/R/gibbs_stan_lm/gibbs_stan_lm_test.R', echo=TRUE)
source('~/git/Iterative_ML/R/gibbs_stan_lm/gibbs_stan_lm_test.R', echo=TRUE)
setwd("~/git/Iterative_ML/R/gibbs_stan_lm")
source('~/git/Iterative_ML/R/gibbs_stan_lm/gibbs_stan_lm_test.R', echo=TRUE)
source('~/git/Iterative_ML/R/gibbs_stan_lm/mc_stan_snow.R', echo=TRUE)
install.packages("snow")
source('~/git/Iterative_ML/R/gibbs_stan_lm/mc_stan_snow.R', echo=TRUE)
source('~/git/Iterative_ML/R/gibbs_stan_lm/mc_stan_snow.R', echo=TRUE)
source('~/git/Iterative_ML/R/gibbs_stan_lm/mc_stan_snow.R', echo=TRUE)
setwd("~/git/Iterative_ML/R/gibbs_stan_probit")
setwd("~/git/Iterative_ML/R/gibbs_stan_probit")
load("C:/Users/tkmckenzie/Documents/git/Iterative_ML/R/gibbs_stan_lm/stan_mc_results.RData")
source('~/git/Iterative_ML/R/gibbs_stan_lm/mc_gibbs_snow.R', echo=TRUE)
source('~/git/Iterative_ML/R/gibbs_stan_lm/mc_gibbs_snow.R', echo=TRUE)
source('~/git/Iterative_ML/R/gibbs_stan_lm/gibbs_stan_lm_test.R', echo=TRUE)
source('~/git/Iterative_ML/R/gibbs_stan_lm/gibbs_stan_lm_test.R', echo=TRUE)
source('~/git/Iterative_ML/R/gibbs_stan_lm/gibbs_stan_lm_test.R', echo=TRUE)
source('~/git/Iterative_ML/R/gibbs_stan_lm/gibbs_stan_lm_test.R', echo=TRUE)
#Load MC results
load("gibbs_mc_results.RData")
load("stan_mc_results.RData")
load("C:/Users/tkmckenzie/Documents/git/Iterative_ML/R/gibbs_stan_lm/gibbs_mc_results.RData")
source('~/git/Iterative_ML/R/gibbs_stan_lm/gibbs_stan_lm_test.R', echo=TRUE)
source('~/git/Iterative_ML/R/gibbs_stan_lm/mc_gibbs_snow.R', echo=TRUE)
source('~/git/Iterative_ML/R/gibbs_stan_lm/mc_gibbs_snow.R', echo=TRUE)
